import sqlite3

bdd = sqlite3.connect("bdd_user.db")
curseur = bdd.cursor()

# requete = """
# DROP TABLE IF EXISTS noeud; 
# """
# curseur.execute(requete)
# requete = """
# CREATE TABLE noeud (
# id INTEGER PRIMARY KEY,
# nom STRING
# );
# """
# curseur.execute(requete)



# requete = """
# DROP TABLE IF EXISTS arc; 
# """
# curseur.execute(requete)
# requete = """
# CREATE TABLE arc (
# nom_1 INTEGER REFERENCES noeud (nom),
# nom_2 INTEGER REFERENCES noeud (nom),
# PRIMARY KEY (nom_1, nom_2)
# );
# """
# curseur.execute(requete)



# requete = """
# DROP TABLE IF EXISTS capture; 
# """
# curseur.execute(requete)
# requete = """
# CREATE TABLE capture (
# id_capture INTEGER PRIMARY KEY,
# id_user STRING REFERENCES user (id),
# id_noeud INTEGER REFERENCES noeud (id));
# """
# curseur.execute(requete)



requete = """
INSERT INTO noeud 
VALUES (
1,
"Lune"
), (
2,
"Soleil"
);
"""
curseur.execute(requete)



requete = """
INSERT INTO arc 
VALUES (
"Soleil",
"Lune"
);
"""
curseur.execute(requete)



requete = """
INSERT INTO capture 
VALUES (
1,
1,
1);
"""
curseur.execute(requete)


import wikipediaapi

wiki_wiki = wikipediaapi.Wikipedia('en')
page_py = wiki_wiki.page('Python_(programming_language)')
page_lune = wiki_wiki.page('Lune')

requete = """
INSERT INTO arc 
VALUES (
?,
?
);
"""
curseur.execute(requete, (page_py.title, page_lune.title))

# def print_links(page):
#         links = page.links
#         for title in sorted(links.keys()):
#             print("%s: %s" % (title, links[title]))

# print_links(page_py)

requete = """
SELECT *
FROM arc;
"""
curseur.execute(requete)
a = curseur.fetchall()
print(a)