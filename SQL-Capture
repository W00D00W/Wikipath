import sqlite3

bdd = sqlite3.connect("bdd_user.db")
curseur = bdd.cursor()

requete = """
DROP TABLE IF EXISTS noeud; 
"""
curseur.execute(requete)
requete = """
CREATE TABLE noeud (
nom STRING PRIMARY KEY
);
"""
curseur.execute(requete)



requete = """
DROP TABLE IF EXISTS arc; 
"""
curseur.execute(requete)
requete = """
CREATE TABLE arc (
nom_1 INTEGER REFERENCES noeud (nom),
nom_2 INTEGER REFERENCES noeud (nom),
PRIMARY KEY (nom_1, nom_2)
);
"""
curseur.execute(requete)



requete = """
DROP TABLE IF EXISTS capture; 
"""
curseur.execute(requete)
requete = """
CREATE TABLE capture (
id_user STRING REFERENCES user (id),
id_noeud INTEGER REFERENCES noeud (nom),
PRIMARY KEY (id_user, id_noeud));
"""
curseur.execute(requete)



def insert_noeud(noeud):
    requete = """
    INSERT INTO noeud
    VALUES (
    ?
    );
    """
    curseur.execute(requete, (noeud.title,))



def insert_capture(noeud, id_user):
    requete = """
    INSERT INTO capture
    VALUES (
    ?,
    ?
    );
    """
    curseur.execute(requete, (id_user, noeud.title))



def insert_arc(noeud_1, noeud_2):
    requete = """
    INSERT INTO arc
    VALUES (
    ?,
    ?
    );
    """
    curseur.execute(requete, (noeud_1.title, noeud_2.title,))



import wikipediaapi

wiki_wiki = wikipediaapi.Wikipedia('en')
page_py = wiki_wiki.page('Python_(programming_language)')
page_lune = wiki_wiki.page('Lune')

insert_noeud(page_py)
insert_noeud(page_lune)
insert_capture(page_py, 1)
insert_arc(page_py, page_lune)



requete = """
SELECT *
FROM arc
JOIN noeud ON arc.nom_1 = noeud.nom
JOIN capture ON capture.id_noeud = noeud.nom
;
"""
curseur.execute(requete)
a = curseur.fetchall()
print(a)



